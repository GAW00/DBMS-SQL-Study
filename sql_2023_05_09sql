SELECT * FROM PROFESSOR;
SELECT * FROM EMP;
SELECT * FROM STUDENT;
SELECT * FROM EMP2;
SELECT * FROM FRUIT;
-- 실습문제 3장 A7
SELECT DEPTNO
     , ENAME
     , SAL
     , SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL) TOTAL
FROM EMP;





-- 실습문제 3장 A6
SELECT COUNT(*) || 'EA (' || COUNT(*) / COUNT(*) * 100 || '%)' "TOTAL"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '02', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '02', 0)) / COUNT(*) * 100 || '%)' "SEOUL"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '031', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '031', 0)) / COUNT(*) * 100 || '%)' "GYEONGGI"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '051', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '051', 0)) / COUNT(*) * 100 || '%)' "BUSAN"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '052', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '052', 0)) / COUNT(*) * 100 || '%)' "ULSAN"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '053', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '053', 0)) / COUNT(*) * 100 || '%)' "DAEGU"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '055', 0)) || 'EA (' || COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '055', 0)) / COUNT(*) * 100 || '%)' "GEONGNAM"
FROM STUDENT;





-- 실습문제 3장 A5
select sum(decode(name, 'apple', price)) "APPLE"
      ,sum(decode(name, 'grape', price)) "GRAPE"
      ,sum(decode(name, 'orange', price)) "ORANGE"
from fruit;


SELECT *
FROM (
        SELECT NAME
             , PRICE
        FROM FRUIT
      )
PIVOT(SUM(PRICE) FOR NAME IN ('apple' AS "APPLE", 'grape' AS "GRAPE", 'orange' AS "ORANGE"));




-- 실습문제 3장 A4
SELECT DEPTNO
     , ENAME
     , SAL
     , SUM(SAL) OVER(ORDER BY SAL) TOTAL
FROM EMP;




-- 실습문제 3장 A3
SELECT COUNT(*) "TOTAL"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '02', 0)) "SEOUL"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '031', 0)) "GYEONGGI"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '051', 0)) "BUSAN"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '052', 0)) "ULSAN"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '053', 0)) "DAEGU"
     , COUNT(DECODE(SUBSTR(TEL, 1, INSTR(TEL, ')') - 1), '055', 0)) "GEONGNAM"
FROM STUDENT;





-- 실습문제 3장 A2
SELECT COUNT(*) || 'EA' "TOTAL"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '01', 1)) || 'EA' "JAN"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '02', 1)) || 'EA' "FEB"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '03', 1)) || 'EA' "MAR"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '04', 1)) || 'EA' "APR"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '05', 1)) || 'EA' "MAY"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '06', 1)) || 'EA' "JUN"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '07', 1)) || 'EA' "JUL"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '08', 1)) || 'EA' "AUG"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '09', 1)) || 'EA' "SEP"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '10', 1)) || 'EA' "OCT"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '11', 1)) || 'EA' "NOV"
     , COUNT(DECODE(TO_CHAR(BIRTHDAY, 'MM'), '12', 1)) || 'EA' "DEC"
FROM STUDENT;






-- 실습문제 3장 A1
SELECT MAX(SAL + NVL(COMM, 0)) MAX
     , MIN(SAL + NVL(COMM, 0)) MIN
     , ROUND(AVG(SAL + NVL(COMM, 0)), 1) AVG
FROM EMP;




-- 실습문제 3장 Y-2
SELECT NAME
     , TEL
     , TO_CHAR(PAY, '999,999,999') "PAY"
     , TO_CHAR(SUM(PAY) OVER(PARTITION BY SUBSTR(TEL, 1, INSTR(TEL, ')') -1)), '999,999,999') "TOTAL_AREA"
     , ROUND(RATIO_TO_REPORT(SUM(PAY)) OVER(PARTITION BY SUBSTR(TEL, 1, INSTR(TEL, ')') -1)) * 100, 2) "RATIO(%)"
FROM EMP2
GROUP BY NAME, TEL, PAY;


SELECT NAME
     , TEL
     , TO_CHAR(PAY, '999,999,999') "PAY"
     , TO_CHAR(SUM(PAY) OVER(PARTITION BY SUBSTR(TEL, 1, INSTR(TEL, ')'))), '999,999,999') "TOTAL_AREA"
     , ROUND(PAY / SUM(PAY) OVER(PARTITION BY SUBSTR(TEL, 1, INSTR(TEL, ')'))) * 100, 2) "RATIO(%)"
FROM EMP2
GROUP BY NAME, TEL, PAY;




-- 실습문제 3장 Y-1
SELECT SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1) "DOMAIN"
     , COUNT(*) "EA"
     , SUM(COUNT(*)) OVER() "SUM_DOMAIN"
     , COUNT(*) / SUM(COUNT(*)) OVER() * 100 "%"
FROM PROFESSOR
GROUP BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1)
ORDER BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1);

--SELECT DISTINCT SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1) DOMAIN
--     , SUM(1) OVER(PARTITION BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1) ORDER BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1)) EA
--     , SUM(1) OVER() SUM_DOMAIN
--     , ROUND((SUM(1) OVER(PARTITION BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1) ORDER BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1))) / (SUM(1) OVER()) * 100, 2) "%"
--FROM PROFESSOR
--ORDER BY SUBSTR(EMAIL, INSTR(EMAIL, '@') + 1);

     


-- 실습문제 3장 X-3
SELECT NAME
     , JUMIN
     , DEPTNO1
     , DECODE(SUBSTR(JUMIN, 7, 1), '1', 'M', 'F') MF
     , WEIGHT
     , SUM(WEIGHT) OVER(PARTITION BY DEPTNO1, SUBSTR(JUMIN, 7, 1) ORDER BY WEIGHT DESC) TOTAL
FROM STUDENT;





-- 실습문제 3장 X-2
SELECT NAME
     , GRADE
     , WEIGHT
     , RANK() OVER(PARTITION BY GRADE ORDER BY WEIGHT DESC) RANK
FROM STUDENT;




-- 실습문제 3장 X-1
SELECT NAME
     , HEIGHT
     , RANK() OVER(ORDER BY HEIGHT DESC) RANK
     , DENSE_RANK() OVER(ORDER BY HEIGHT DESC) RANK2
     , ROW_NUMBER() OVER(ORDER BY HEIGHT DESC) RANK3
FROM STUDENT
WHERE HEIGHT >= 170;




-- 실습문제 CASE03
SELECT EMPNO
     , ENAME
     , COMM
     , CASE WHEN COMM IS NULL THEN '해당사항 없음'
            WHEN COMM = 0 THEN '수당 없음'
--            WHEN COMM > 0 THEN CONCAT('수당 : ', COMM)
            WHEN COMM > 0 THEN '수당 : ' || COMM
       END "COMM_TEXT"
FROM EMP;




-- 실습문제 DECODE03
SELECT EMAIL
     , DECODE(INSTR(EMAIL, '@'), 8
           , (REPLACE(EMAIL, SUBSTR(EMAIL, 1, 7), '???????'))
           , 7
           , (REPLACE(EMAIL, SUBSTR(EMAIL, 1, 6), '??????'))
           , 5
           , (REPLACE(EMAIL, SUBSTR(EMAIL, 1, 4), '????'))) "EMAIL_?"
     , HPAGE
     , DECODE(INSTR(HPAGE, '.', 1, 2) - INSTR(HPAGE, '.', 1, 1), 4
              , (REPLACE(HPAGE, SUBSTR(HPAGE, INSTR(HPAGE, '.') + 1, 3), '***'))
              , (REPLACE(HPAGE, SUBSTR(HPAGE, INSTR(HPAGE, '.' , 1, 1) + 1, 5), '*****'))) "HPAGE_*"
FROM PROFESSOR
WHERE HPAGE IS NOT NULL;